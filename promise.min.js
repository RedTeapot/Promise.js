(function(){var attachContext=window;(function(){var rIE=/\bMSIE\s+((\d+)(\.\d+)*)\b/i;var ieMajorVersion=rIE.exec(navigator.userAgent);if(null!=ieMajorVersion){ieMajorVersion=parseInt(ieMajorVersion[2]);if(ieMajorVersion<=8){Object.defineProperty=function(obj,name,opt){obj[name]=opt.value};Array.prototype.forEach=function(f){for(var i=0;i<this.length;i++){f(this[i],i)}}}}})();var STATE={pending:"pending",fulfilled:"fulfilled",rejected:"rejected"};var emptyFunction=function(){};var debug=function(){var s="";for(var i=0;i<arguments.length;i++){s+=", arguments["+i+"]"}eval("console.log('promise: '"+s+")")};var resolvePromise=function(result,resolve,reject){if(result instanceof Promise){result.then(function(resolvedData){resolvePromise(resolvedData,resolve,reject)},function(rejectedData){reject(rejectedData)});return}if(null==result||undefined==result||typeof result!=="object"&&typeof result!=="function"){resolve(result);return}var then;try{then=result.then}catch(e){reject(e);return}if(typeof then!=="function"){resolve(result);return}var finished=false;try{then.call(result,function(data){if(finished){return}resolvePromise(data,resolve,reject);finished=true},function(data){if(finished){return}reject(data);finished=true})}catch(e){if(finished){return}reject(e)}};var PromisePrototype=function(executor){var state=STATE.pending;var resolvedData,rejectedData;var resolveListeners=[],rejectListeners=[];Object.defineProperty(this,"resolve",{value:function(data){if(state!==STATE.pending){return}state=STATE.fulfilled;resolvedData=data;resolveListeners.forEach(function(listener){setTimeout(function(){listener(data)},0)})},enumerable:false,writable:false,configurable:false});Object.defineProperty(this,"reject",{value:function(data){if(state!==STATE.pending){return}state=STATE.rejected;rejectedData=data;rejectListeners.forEach(function(listener){setTimeout(function(){listener(data)},0)})},enumerable:false,writable:false,configurable:false});Object.defineProperty(this,"then",{value:function(onFulfilled,onRejected){var promise=new Promise(function(resolve,reject){if(typeof onFulfilled==="function"){var newOnFulfilled=function(resolvedData){try{var rst=onFulfilled(resolvedData);if(rst===promise){throw new TypeError("Resolved data can not be the same with returned Promise instance of 'then' method")}resolvePromise(rst,resolve,reject)}catch(e){reject(e)}};resolveListeners.push(newOnFulfilled);if(state===STATE.fulfilled){newOnFulfilled(resolvedData)}}else{if(state===STATE.fulfilled){resolve(resolvedData)}else{resolveListeners.push(function(data){resolve(data)})}}if(typeof onRejected==="function"){var newOnRejected=function(rejectedData){try{var rst=onRejected(rejectedData);if(rst===promise){throw new TypeError("Rejected data can not be the same with returned Promise instance of 'then' method")}resolvePromise(rst,resolve,reject)}catch(e){reject(e)}};rejectListeners.push(newOnRejected);if(state===STATE.rejected){newOnRejected(rejectedData)}}else{if(state===STATE.rejected){reject(rejectedData)}else{rejectListeners.push(function(data){reject(data)})}}});return promise},enumerable:false,writable:false,configurable:false});Object.defineProperty(this,"catch",{value:function(onRejected){return this.then(undefined,onRejected)},enumerable:false,writable:false,configurable:false})};var Promise=function(executor,promisePrototype){if(typeof executor!=="function"){throw new TypeError("Promise executor: "+String(executor)+" is not a function")}promisePrototype=promisePrototype instanceof PromisePrototype?promisePrototype:new PromisePrototype();Object.defineProperty(this,"then",{value:function(){return promisePrototype.then.apply(promisePrototype,arguments)},enumerable:false,writable:false,configurable:false});Object.defineProperty(this,"catch",{value:function(){return promisePrototype["catch"].apply(promisePrototype,arguments)},enumerable:false,writable:false,configurable:false});setTimeout(function(){executor(promisePrototype.resolve,promisePrototype.reject)},0)};Object.defineProperty(Promise,"defer",{value:function(){var promisePrototype=new PromisePrototype();var promise=new Promise(emptyFunction,promisePrototype);var obj={};Object.defineProperty(obj,"promise",{value:promise,enumerable:false,writable:false,configurable:false});Object.defineProperty(obj,"resolve",{value:promisePrototype.resolve,enumerable:false,writable:false,configurable:false});Object.defineProperty(obj,"reject",{value:promisePrototype.reject,enumerable:false,writable:false,configurable:false});return obj},enumerable:false,writable:false,configurable:false});Object.defineProperty(Promise,"resolve",{value:function(data){var promise=new Promise(function(resolve,reject){resolvePromise(data,resolve,reject)});return promise},enumerable:false,writable:false,configurable:false});Object.defineProperty(Promise,"reject",{value:function(data){var promise=new Promise(function(resolve,reject){reject(data)});return promise},enumerable:false,writable:false,configurable:false});Object.defineProperty(Promise,"race",{value:function(iterable){var promise=new Promise(function(resolve,reject){var isFinished=false;
var _resolvePromise=function(data){if(isFinished){return}resolve(data);isFinished=true},_rejectPromise=function(data){if(isFinished){return}reject(data);isFinished=true};iterable.forEach(function(itm){itm=Promise.resolve(itm);itm.then(_resolvePromise,_rejectPromise)})});return promise},enumerable:false,writable:false,configurable:false});Object.defineProperty(Promise,"all",{value:function(iterable){var promise=new Promise(function(resolve,reject){var finishedPromises=new Array(iterable.length),resolvedDatas=new Array(iterable.length);var isAllFinished=function(){return iterable.every(function(itm){return finishedPromises.indexOf(itm)!=-1})};iterable.forEach(function(itm,i){var tarItm=Promise.resolve(itm);tarItm.then((function(itm){return function(data){finishedPromises[i]=itm;resolvedDatas[i]=data;if(isAllFinished()){resolve(resolvedDatas)}}})(itm),function(data){reject(data)})})});return promise},enumerable:false,writable:false,configurable:false});attachContext.Promise=Promise})();